---
kind: ConfigMap
apiVersion: v1
metadata:
  name: ha-automations-pcg13-cm
  namespace: ha
data:
  automations-pcg13-cm.yaml: |
    - alias: "Aktualizuj Temperaturę Pompy Ciepła na Podstawie Taryfy G13 i Temperatury Zewnętrznej"
      description: "Ustawia temperaturę pompy ciepła zgodnie z taryfą G13 oraz temperaturą zewnętrzną"
      trigger:
        - platform: state
          entity_id:
            - sensor.desired_heating_temperature
            - calendar.g13_tariff_low
            - calendar.g13_tariff_medium
            - calendar.g13_tariff_high
            - sensor.pompa_temperatura_zewnetrzna
        - platform: state
          entity_id: binary_sensor.pracujoncy
      condition:
        - condition: state
          entity_id: climate.pompa_podloga
          state: "heat"
      action:
        - service: climate.set_temperature
          target:
            entity_id: climate.pompa_podloga
          data:
            temperature: "{{ states('sensor.desired_heating_temperature') | float }}"
        - service: input_number.set_value
          target:
            entity_id: input_number.pompa_last_set_temperature
          data:
            value: "{{ states('sensor.desired_heating_temperature') | float }}"
        - service: input_datetime.set_datetime
          target:
            entity_id: input_datetime.pompa_last_set_time
          data:
            timestamp: "{{ now().timestamp() | int }}"

    - alias: "Powiadomienie o Ustawieniu Temperatury Pompy Ciepła"
      description: "Wysyła powiadomienie, gdy temperatura pompy ciepła zostanie ustawiona"
      trigger:
        - platform: state
          entity_id: climate.pompa_podloga
      condition:
        - condition: template
          value_template: >
            {{ trigger.to_state.attributes.temperature != trigger.from_state.attributes.temperature }}
      action:
        - service: notify.mobile_app_g3n3zyp
          data:
            title: "Temperatura Pompy Ciepła Zaktualizowana"
            message: >
              Temperatura została ustawiona na {{ states('sensor.desired_heating_temperature') }}°C
              o godzinie {{ now().strftime('%H:%M:%S') }}.